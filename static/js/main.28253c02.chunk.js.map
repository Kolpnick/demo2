{"version":3,"sources":["components/Nav/Nav.module.scss","components/App/App.module.scss","components/Footer/Footer.module.scss","components/skills/BaseSkill/BaseSkill.module.scss","components/skills/ChatSkill/ChatSkill.module.scss","components/Footer/DeepPavlov.png","lib/store.ts","components/Nav/Nav.tsx","components/Footer/Footer.tsx","components/skills/utils.tsx","components/skills/BaseSkill/BaseSkill.tsx","components/skills/ru/TextQA.tsx","components/skills/ru/ODQA.tsx","lib/api.ts","components/skills/ru/NER.tsx","components/skills/ru/Sentiment.tsx","components/skills/en/TextQA.tsx","components/skills/en/ODQA.tsx","components/skills/en/Insult.tsx","components/skills/en/Intent.tsx","components/skills/en/NER.tsx","components/skills/ChatSkill/ChatSkill.tsx","components/skills/en/Chat.tsx","components/skills/en/Ranking.tsx","components/skills/mu/TextQA.tsx","components/skills/mu/NER.tsx","components/skills/zh/TextQA.tsx","components/App/App.tsx","index.js"],"names":["module","exports","nav","langSelector","active","navLinks","navLink","activeLink","header","title","blue","yellow","footer","saas","contactUs","container","docker","inputArea","inputs","examples","button","answers","basic","modal","error","close","ldsRing","lds-ring","disclaimer","inputGroup","formControl","customSelect","customFile","inputGroupPrepend","inputGroupAppend","inputGroupText","dropdownToggle","user","bot","__webpack_require__","p","createActions","UPDATESTORE","prop","messages","LOADING","SAFECOMPONENTINPUTS","componentState","updatestore","loading","safecomponentinputs","reducer","handleActions","state","action","_action$payload","payload","_objectSpread","Object","defineProperty","toConsumableArray","_action$payload2","ROUTES","ru","link","en","mu","zh","Nav","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","langChange","lang","component","newRoute","history","push","concat","setState","renderNavLinks","map","item","index","react_default","a","createElement","key","react_router_dom","to","exact","activeClassName","style","className","cn","onClick","pathname","location","Nav_objectSpread","split","Component","withRouter","href","target","rel","src","img","alt","colors","ruNerStyles","ORG","color","text","LOC","PER","intentsClasses","AddToPlaylist","BookRestaurant","GetWeather","PlayMusic","RateBook","SearchCreativeWork","SearchScreeningEvent","ontonotesClasses","PERSON","NORP","GPE","DATE","MONEY","FAC","PRODUCT","EVENT","WORK_OF_ART","LAW","LANGUAGE","TIME","PERCENT","QUANTITY","ORDINAL","CARDINAL","renderNerClasses","classes","entries","_ref","i","_ref2","slicedToArray","value","utils_NerClass","assign","label","NerClass","_Component","ref","tooltipRef","handleClickOutside","event","current","contains","clicked","createRef","leftTooltip","inherits","createClass","document","addEventListener","getClientRects","left","removeEventListener","_this2","_this$props","tip","_this$state","backgroundColor","cursor","BaseSkill","answersRef","isRTL","s","RegExp","test","renderInput","input","type","dir","name","placeholder","onChange","e","onKeyPress","onCntrlEnterPress","persist","ctrlKey","onAsk","onExample","ex","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","renderExamples","checker","question","rest","BaseSkill_objectSpread","keys","length","forEach","renderAnswers","renderAnswer","renderNer","renderRanking","renderIntent","renderQA","renderBasic","mes","answer","toString","replace","spans","reducedColors","spansIndex","substring","join","ner","values","array","_callee2","api","updateStore","dispatchLoading","response","_getBoundingClientRec","bottom","offset","_context2","activeElement","blur","Boolean","alert","abrupt","catch","console","sent","splice","data","window","gtag","event_category","event_label","setTimeout","getBoundingClientRect","Math","max","pageYOffset","innerHeight","scrollTo","top","behavior","scrollTop","onFormSubmit","preventDefault","onErrorClose","initState","safeComponentState","_this$props2","desc","width","height","viewBox","fill","d","onSubmit","id","withConnect","stateKey","connect","dispatch","RequestLoading","SCI","config","_api","stateReq","req","context_raw","question_raw","axios","post","_x","apply","arguments","TexqQA","skillWrapper","TextQA","ODQA","ru_ODQA","lib_api","path","x","NER","ru_NER","Sentiment","ru_Sentiment","en_TextQA","TextQA_TexqQA","en_ODQA","ODQA_ODQA","Insult","en_Insult","Intent","en_Intent","marginTop","en_NER","NER_NER","ChatSkill","inputRef","ChatSkill_objectSpread","scrollMessages","undefined","answersDiv","scrollHeight","scrollToInput","inputDiv","_inputDiv$getBounding","scrollListener","getElementsByTagName","focus","messageApi","commentIndex","indexOf","trim","message","reset","resetApi","agree","agreed","_this$props3","apiUrl","uid","uuidv4","chatApi","user_id","headers","Content-Type","_resetApi","Chat","en_Chat","Ranking","Ranking_ODQA","mu_TextQA","mu_TextQA_TexqQA","mu_NER","mu_NER_NER","zh_TextQA","zh_TextQA_TexqQA","App","components_Nav_Nav","main","react_router","TextQAru","ODQAru","NERru","TextQAen","TextQAml","NERml","TextQAzh","Footer","store","createStore","render","es","components_App_App","getElementById"],"mappings":"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","file":"static/js/main.28253c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2p4vD\",\"langSelector\":\"Nav_langSelector__ll-pq\",\"active\":\"Nav_active__3kHRf\",\"navLinks\":\"Nav_navLinks__dn1k7\",\"navLink\":\"Nav_navLink__23yH4\",\"activeLink\":\"Nav_activeLink__28ehC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3MgOT\",\"title\":\"App_title__2C-7r\",\"blue\":\"App_blue__1_YIx\",\"yellow\":\"App_yellow__EE42m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\",\"saas\":\"Footer_saas__1NRDc\",\"contactUs\":\"Footer_contactUs__19C5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BaseSkill_container__AEqOx\",\"title\":\"BaseSkill_title___6B8r\",\"docker\":\"BaseSkill_docker__2Nn_O\",\"inputArea\":\"BaseSkill_inputArea__35VRe\",\"inputs\":\"BaseSkill_inputs__2FylI\",\"examples\":\"BaseSkill_examples__2l4gD\",\"active\":\"BaseSkill_active__c_TKu\",\"button\":\"BaseSkill_button__6wP_v\",\"answers\":\"BaseSkill_answers__15M2o\",\"basic\":\"BaseSkill_basic__2E-Fe\",\"modal\":\"BaseSkill_modal__2tFyt\",\"error\":\"BaseSkill_error__3K3kq\",\"close\":\"BaseSkill_close__AfTd4\",\"ldsRing\":\"BaseSkill_ldsRing__2lSRl\",\"lds-ring\":\"BaseSkill_lds-ring__DzinH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChatSkill_container__3OMdn\",\"title\":\"ChatSkill_title__1hSO8\",\"disclaimer\":\"ChatSkill_disclaimer__hByyF\",\"docker\":\"ChatSkill_docker__1et0w\",\"inputArea\":\"ChatSkill_inputArea__w_w4K\",\"inputs\":\"ChatSkill_inputs__1ahW8\",\"examples\":\"ChatSkill_examples__ADd0S\",\"inputGroup\":\"ChatSkill_inputGroup__3zVCR\",\"formControl\":\"ChatSkill_formControl__2BUYH\",\"customSelect\":\"ChatSkill_customSelect__3xjFG\",\"customFile\":\"ChatSkill_customFile__3b1Ge\",\"button\":\"ChatSkill_button__2uc6-\",\"inputGroupPrepend\":\"ChatSkill_inputGroupPrepend__2k0df\",\"inputGroupAppend\":\"ChatSkill_inputGroupAppend__1dMTH\",\"inputGroupText\":\"ChatSkill_inputGroupText__3P6SJ\",\"dropdownToggle\":\"ChatSkill_dropdownToggle__iyj2x\",\"active\":\"ChatSkill_active__17Tdm\",\"answers\":\"ChatSkill_answers__1Cu3Z\",\"user\":\"ChatSkill_user__e9X3-\",\"bot\":\"ChatSkill_bot__vBG5f\",\"modal\":\"ChatSkill_modal__13PgM\",\"error\":\"ChatSkill_error__sJCRo\",\"close\":\"ChatSkill_close__2deBV\",\"ldsRing\":\"ChatSkill_ldsRing__242M9\",\"lds-ring\":\"ChatSkill_lds-ring__2dDRA\"};","module.exports = __webpack_public_path__ + \"static/media/DeepPavlov.13c4e31c.png\";","import { createActions, handleActions } from 'redux-actions';\nexport interface Action<T = { [key:string]: any; }> {\n  type: string;\n  payload: T;\n}\nexport interface State {\n  loading?: boolean;\n  [key:string]: any;\n}\ninterface UpdateAction {\n  prop: string;\n  messages: any[];\n}\ninterface SafeStateAction {\n  prop: string;\n  componentState: any;\n}\ninterface Actions {\n  updatestore: (prop: string, messages: any[]) => Action<UpdateAction>;\n  loading: () => Action<{}>;\n  safecomponentinputs: (prop: string, componentState: any) => Action<SafeStateAction>;\n}\n\nconst state: State = {\n  loading: false,\n};\n\nconst { updatestore, loading, safecomponentinputs }: Actions = createActions({\n  UPDATESTORE: (prop: string, messages: any[]) => ({ prop, messages }),\n  LOADING: () => ({}),\n  SAFECOMPONENTINPUTS: (prop: string, componentState: any) => ({ prop, componentState }),\n});\n\nconst reducer = handleActions({\n  UPDATESTORE: (state: State, action: Action<UpdateAction>) => {\n    const { prop, messages } = action.payload;\n    return { ...state, [prop]: [...messages] };\n  },\n  LOADING: (state: State) => {\n    return { ...state, loading: !state.loading };\n  },\n  SAFECOMPONENTINPUTS: (state: State, action: Action<SafeStateAction>) => {\n    const { prop, componentState } = action.payload;\n    return { ...state, [prop]: { ...componentState } };\n  },\n}, state);\n\nexport { reducer, updatestore, loading, safecomponentinputs as SCI };\n","import React, { Component } from 'react';\nimport cn from 'classnames';\nimport { withRouter, RouteComponentProps, NavLink } from 'react-router-dom';\n\nimport style from './Nav.module.scss';\n\ntype Props =  RouteComponentProps;\n\ninterface State {\n  lang: 'ru' | 'en' | 'mu' | 'zh';\n  component: {\n    ru: string;\n    en: string;\n    mu: string;\n    zh: string;\n  };\n}\n\nconst ROUTES = {\n  ru: [\n    { title: 'Ответы на вопросы по тексту', link: 'textqa' },\n    { title: 'Ответы на вопросы', link: 'odqa' },\n    { title: 'Распознование именованных сущностей', link: 'ner' },\n    { title: 'Анализ тональности', link: 'sentiment' },\n  ],\n  en: [\n    { title: 'Text QA', link: 'textqa' },\n    { title: 'ODQA', link: 'odqa' },\n    { title: 'Ranking', link: 'ranking' },\n    { title: 'Entity recognition', link: 'ner' },\n    { title: 'Intent classification', link: 'intent' },\n    { title: 'Insult detection', link: 'insult' },\n    { title: 'Chatbot', link: 'chat' },\n  ],\n  mu: [\n    { title: 'Text QA', link: 'textqa' },\n    { title: 'Entity recognition', link: 'ner' },\n  ],\n  zh: [\n    { title: 'Text QA', link: 'textqa' },\n  ],\n\n};\n\nclass Nav extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lang: 'en',\n      component: {\n        ru: '',\n        en: '',\n        mu: '',\n        zh: '',\n      },\n    };\n  }\n\n  static getDerivedStateFromProps (props: Props, state: State) {\n    const { location: { pathname }, history } = props;\n    const { component } = state;\n    if (pathname === '/' || pathname === '') {\n      history.push(`/en/${ROUTES.en[0].link}`);\n      return { lang: 'en', component: { ...component, en:ROUTES.en[0].link } };\n    }\n    return {\n      lang: pathname.split('/')[1] as 'ru' | 'en' | 'mu' | 'zh',\n      component: { ...component, [pathname.split('/')[1]]: pathname.split('/')[2] },\n    };\n  }\n\n  langChange = (lang: 'ru' | 'en' | 'mu' | 'zh' ) => () => {\n    if (this.state.lang === lang) return;\n\n    const { component } = this.state;\n    let newRoute = ROUTES[lang][0].link;\n    if (component[lang]) {\n      newRoute = component[lang];\n    }\n    const { history } = this.props;\n    history.push(`/${lang}/${newRoute}`);\n    this.setState({ lang });\n  }\n\n  renderNavLinks = (lang: 'ru' | 'en' | 'mu' | 'zh' ) => {\n    const links = ROUTES[lang];\n    return links.map((item, index: number) => {\n      return (\n        <li key={index}>\n          <NavLink\n            to={`/${lang}/${item.link}`} exact activeClassName={style.activeLink} className={style.navLink}>\n            {item.title}\n          </NavLink>\n        </li>\n      );\n    });\n  }\n\n  render () {\n    const { lang } = this.state;\n    return (\n      <nav className={style.nav}>\n        <ul className={style.navLinks}>\n          {this.renderNavLinks(lang)}\n        </ul>\n        <div className={style.langSelector}>\n          <div className={cn(lang === 'ru' && style.active)} onClick={this.langChange('ru')}>Ru</div>\n          <div className={cn(lang === 'en' && style.active)} onClick={this.langChange('en')}>En</div>\n          {/* <div className={cn(lang === 'zh' && style.active)} onClick={this.langChange('zh')}>Zh</div> */}\n          <div className={cn(lang === 'mu' && style.active)} onClick={this.langChange('mu')}>Multi-Lang</div>\n        </div>\n      </nav>\n    );\n  }\n\n}\n\nexport default withRouter(Nav);\n","import React, { Component } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport style from './Footer.module.scss';\nimport img from './DeepPavlov.png';\n\ntype Props =  RouteComponentProps;\n\ninterface State {\n  lang: 'ru' | 'en' | 'mu';\n}\n\nclass Nav extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      lang: 'en',\n    };\n  }\n  componentDidMount() {\n    const { location: { pathname } } = this.props;\n    if (pathname === '/') {\n      this.setState({ lang: 'en' });\n    } else {\n      this.setState({ lang: pathname.split('/')[1] as 'ru' | 'en' | 'mu' });\n    }\n  }\n  static getDerivedStateFromProps(props: Props) {\n    const { location: { pathname } } = props;\n    return { lang: pathname.split('/')[1] as 'ru' | 'en' | 'mu' };\n  }\n\n  render () {\n    return (\n      <footer className={style.footer}>\n        {false && <div className={style.saas}>\n          <p>Docker</p>\n          <a\n          href=\"http://docs.deeppavlov.ai/en/master/intro/quick_start.html#docker-images\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          >\n            DeepPavlov Docker images reference\n          </a>\n        </div>}\n        <div className={style.saas}>\n          <p>Try Pre-Trained Models on Your Data in Cloud NLP Platform (Free & Unlimited Alpha Version)</p>\n          <div>\n            You can try our pre-trained models on your data via SaaS NLP platform.\n            3 models are available in Alpha version:\n            <ul>\n              <li>Named Entity Recognition (multilingual)</li>\n              <li>Sentiment Classification (RU)</li>\n              <li>Context QA (multilingual, SQUAD - based)</li>\n            </ul>\n\n            <a href=\"http://2276.lnsigo.mipt.ru/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              Get started </a>\n              with pre-trained machine learning model to reveal the structure and meaning of text.\n          </div>\n        </div>\n        <div className={style.saas}>\n          <p>Fine-Tune Models for Your Specific Needs</p>\n          <div>\n            For your specific NLP tasks you can fine-tune DeepPavlov models on your data or we can do it for you.\n            Please <a href=\"https://docs.google.com/forms/d/e/1FAIpQLSfguwTOEcwBaccDMm5HSvqxsz4X3fw1T2lnI6hYf3AhcXOy0g/viewform\" target=\"_blank\" rel=\"noopener noreferrer\">\n              fill out this form </a>\n            to discuss your needs with our team.\n          </div>\n        </div>\n        <a href=\"https://github.com/deepmipt\">\n            <img src={img} alt=\"powered by DeepPavlov\"/>\n            © deepmipt on GitHub\n        </a>\n      </footer>\n    );\n  }\n\n}\n\nexport default withRouter(Nav);\n","import React, { Component, createRef } from 'react';\nimport cn from 'classnames';\n\nconst colors = {\n  red: '#dc3545',\n  blue: '#0069b4',\n  cyan: '#17a2b8',\n  green: '#28a745',\n  yellow: '#ffc107',\n  dark: '#343a40',\n  grey: '#6c757d',\n  prune: '#721817',\n  neoncarrot: '#fa9f42',\n  deepkoamaru: '#2b4162',\n  bottlegreen: '#0b6e4f',\n  coolblack: '#C880B7',\n  quenblue: '#437f97',\n  olivedrab: '#849324',\n  darktangerine: '#F1D302',\n  vividred: '#fd151b',\n  cobaltblue: '#004BA8',\n  smokyblack: '#235789',\n\n};\n\nconst ruNerStyles = {\n  ORG: { color: colors.red, text: 'Companies, agencies, institutions, etc.' },\n  LOC: { color: colors.yellow, text: 'Non-GPE locations, mountain ranges, bodies of water.' },\n  PER: { color: colors.green, text: 'People, including fictional.' },\n};\n\nconst intentsClasses = {\n  AddToPlaylist: { color: colors.blue },\n  BookRestaurant: { color: colors.grey },\n  GetWeather: { color: colors.green },\n  PlayMusic: { color: colors.red },\n  RateBook: { color: colors.yellow },\n  SearchCreativeWork: { color: colors.cyan },\n  SearchScreeningEvent: { color: colors.dark },\n};\n\nconst ontonotesClasses = {\n  PERSON: { color: colors.blue, text: 'People, including fictional.' },\n  NORP: { color: colors.red, text: 'Nationalities or religious or political groups.' },\n  ORG: { color: colors.cyan, text: 'Companies, agencies, institutions, etc.' },\n  LOC: { color: colors.green, text: 'Non-GPE locations, mountain ranges, bodies of water.' },\n  GPE: { color: colors.yellow, text: 'Countries, cities, states.' },\n  DATE: { color: colors.dark, text: 'Absolute or relative dates or periods.' },\n  MONEY: { color: colors.grey, text: 'Monetary values, including unit.' },\n  FAC:  { color: colors.prune, text: 'Buildings, airports, highways, bridges, etc.' },\n  PRODUCT: { color: colors.neoncarrot, text: 'Objects, vehicles, foods, etc. (Not services.)' },\n  EVENT: { color: colors.deepkoamaru, text: 'Named hurricanes, battles, wars, sports events, etc.' },\n  WORK_OF_ART: { color: colors.bottlegreen, text: 'Titles of books, songs, etc.' },\n  LAW: { color: colors.coolblack, text: 'Named documents made into laws.' },\n  LANGUAGE: { color: colors.quenblue, text: 'Any named language.' },\n  TIME: { color: colors.olivedrab, text: 'Times smaller than a day.' },\n  PERCENT: { color: colors.darktangerine, text: 'Percentage, including \"%\".' },\n  QUANTITY: { color: colors.vividred, text: 'Measurements, as of weight or distance.' },\n  ORDINAL: { color: colors.cobaltblue, text: '\"first\", \"second\", etc.' },\n  CARDINAL: { color: colors.smokyblack, text: 'Numerals that do not fall under another type.' },\n};\n\nconst renderNerClasses = (classes: {[key: string]: {color: string; text?: string; }}) => {\n  return Object.entries(classes).map(([key, value]: [string, {color: string; text?: string; }], i: number) => (\n    <NerClass label={key} {...value} key={i}/>\n  ));\n};\nexport { renderNerClasses, ontonotesClasses, ruNerStyles, intentsClasses };\n\ninterface NerClassProps {\n  label: string;\n  color: string;\n  text?: string;\n  tip?: string;\n}\ninterface NerClassState {\n  clicked: boolean;\n  leftTooltip: string;\n}\nexport class NerClass extends Component<NerClassProps, NerClassState> {\n  ref: React.RefObject<HTMLSpanElement>;\n  tooltipRef: React.RefObject<HTMLDivElement>;\n\n  constructor (props: NerClassProps) {\n    super(props);\n    this.ref = createRef();\n    this.tooltipRef = createRef();\n    this.state = {\n      clicked: false,\n      leftTooltip: '',\n    };\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n    if (this.tooltipRef.current) {\n      if (this.tooltipRef.current.getClientRects()[0].left < 140) {\n        this.setState({ leftTooltip: 'leftTooltip' });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside = (event: any) => {\n    if (this.ref && !this.ref.current!.contains(event.target)) {\n      this.setState({ clicked: false });\n    }\n  }\n\n  render () {\n    const { label, color, text, tip } = this.props;\n    const { clicked, leftTooltip } = this.state;\n    return (\n      <span\n        className=\"card margin_r\"\n        style={{ backgroundColor: color, cursor: text ? 'help' : 'inherit' }}\n        onClick={() => this.setState({ clicked: !clicked })}\n        ref={this.ref}\n      >\n        {`${label}`}\n        {tip && <span className=\"innerTip\">{tip}</span>}\n        {(text) && (\n          <div\n            className={cn('tooltip', leftTooltip, clicked ? 'activeTooltip' : '')}\n            ref={this.tooltipRef}\n          >\n            <div className=\"tooltipInner\" style={{ backgroundColor: color }}>{text}</div>\n          </div>\n        )}\n      </span>\n    );\n  }\n}\n","import React, { Component, ChangeEvent, createRef, SyntheticEvent, KeyboardEvent } from 'react';\nimport cn from 'classnames';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { State as Store, updatestore, loading as RequestLoading, SCI } from '../../../lib/store';\nimport { NerClass } from '../utils';\n\nimport style from './BaseSkill.module.scss';\n// Moved interfaces into index file because of --isolatedModules\n// https://github.com/Microsoft/TypeScript/issues/21194\nimport { BaseSkillProps, DispatchProps, StateProps, Example, Input, Answer } from './';\ntype Props<Req = any, Res = any> = BaseSkillProps<Req, Res> & DispatchProps & StateProps & RouteComponentProps;\ninterface State {\n  error: any;\n  question: string;\n  [key:string]: string;\n}\n\nclass BaseSkill extends Component<Props, State> {\n  lang: 'ru' | 'en' | 'mu';\n  answersRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    const { inputs, examples, location: { pathname }, componentState } = props;\n    let initState: any = {};\n    if (componentState) {\n      initState = componentState;\n    } else {\n      inputs.forEach((input: Input) => {\n        initState[`${input.name}`] = examples[0][input.name];\n      });\n    }\n    this.state = initState;\n    this.lang = pathname.split('/')[1] as 'ru' | 'en' | 'mu';\n    this.answersRef = createRef();\n  }\n\n  componentDidMount () {\n    const { title } = this.props;\n    window.gtag('event', 'view_item', {\n      event_category: 'Open page',\n      event_label: `${title} ${this.lang}`,\n    });\n  }\n\n  componentWillUnmount () {\n    const { safeComponentState } = this.props;\n    safeComponentState(this.state);\n  }\n\n  isRTL = (s: string) => {\n    const ltrChars = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF' +\n      '\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\n    const rtlChars = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n    const rtlDirCheck = new RegExp(`^[^${ltrChars}]*[${rtlChars}]`);\n\n    return rtlDirCheck.test(s) ? 'rtl' : 'ltr';\n  }\n\n  renderInput = (input: Input, i: number) => (\n    <div key={i}>\n      <p>{input.title}</p>\n      {input.type === 'text' && (\n        <input\n          dir={this.isRTL(this.state[`${input.name}`])}\n          placeholder={input.title}\n          value={this.state[`${input.name}`]}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ [`${input.name}`]: e.target.value })}\n          onKeyPress={this.onCntrlEnterPress}\n        />\n      )}\n      {input.type === 'textarea' && (\n        <textarea\n          dir={this.isRTL(this.state[`${input.name}`])}\n          placeholder={input.title}\n          value={this.state[`${input.name}`]}\n          onChange={(e: ChangeEvent<HTMLTextAreaElement>) => this.setState({ [`${input.name}`]: e.target.value })}\n          onKeyPress={this.onCntrlEnterPress}\n        />\n      )}\n    </div>\n  )\n\n  onCntrlEnterPress = (e: KeyboardEvent) => {\n    e.persist();\n    if (e.key === 'Enter' && e.ctrlKey) {\n      this.onAsk();\n    }\n  }\n\n  onExample =  (ex: Example) => async () => {\n    await this.setState(ex);\n    // this.onAsk();\n  }\n\n  renderExamples = (ex: Example, i: number) => {\n    const { question } = this.state;\n    let checker = question === ex.question;\n    const rest = { ...this.state };\n    delete rest.question;\n    delete rest.error;\n    if (Object.keys(rest).length > 0) {\n      Object.keys(rest).forEach((key) => {\n        checker = checker && rest[key] === ex[key];\n      });\n    }\n    return (\n      <button\n        type=\"button\" className={cn(checker && style.active)} onClick={this.onExample(ex)} key={i} >\n        {ex.question}\n      </button>\n    );\n  }\n\n  renderAnswers = (answers: Answer[]) => {\n    const { renderAnswer } = this.props;\n    if (!renderAnswer || renderAnswer.type === 'basic') {\n      return answers.map(this.renderBasic);\n    } else if (renderAnswer.type === 'ner') {\n      return answers.map(this.renderNer);\n    } else if (renderAnswer.type === 'ranking') {\n      return answers.map(this.renderRanking);\n    } else if (renderAnswer.type === 'intent') {\n      return answers.map(this.renderIntent);\n    } else if (renderAnswer.type === 'textqa') {\n      return answers.map(this.renderQA);\n    }\n  }\n\n  renderRanking = (mes: Answer, i: number) => {\n    return (\n      <div key={i}>\n        <p>{mes.question}</p>\n        <ul key={i}>\n          {mes.answer[0].map((item, i) => <li key={i}>{item}</li>)}\n        </ul>\n      </div>\n    );\n  }\n\n  renderIntent = (mes: Answer, i: number) => {\n    const { colors } = this.props.renderAnswer!;\n    return (\n      <div className={style.basic} dir={this.isRTL(mes.question)} key={i}>\n        <p>\n          <span className=\"card\" style={{ backgroundColor: colors![mes.answer[0].toString()].color! }}>\n            {mes.answer[0]}\n          </span>\n        </p>\n        <p>{mes.question}</p>\n      </div>\n    );\n  }\n\n  renderNer = (mes: Answer, i: number) => {\n    const { answer } = mes;\n    const colors: {\n      [key: string]: {\n        color: string;\n        text?: string;\n        tip?: string;\n      };\n    } = this.props.renderAnswer!.colors!;\n\n    Object.keys(colors!).forEach(key => colors[key].tip = key);\n    const classes: string[] = [];\n    // AWESOME MAGIC\n    answer[1].forEach((value: string) => {\n      if (value !== 'O') {\n        classes.push(value.replace('I-', '').replace('B-', ''));\n      } else {\n        classes.push('');\n      }\n    });\n\n    const spans: string[] = [];\n    const reducedColors: {color: string, text?: string, tip?: string}[] = [];\n    let spansIndex = 0;\n\n    answer[0].forEach((item: string, i: number) => {\n      if (answer[1][i].substring(0, 1) === 'B') {\n        spans[spansIndex] = `${item} `;\n        reducedColors[spansIndex] =  colors![classes[i]];\n      } else if (answer[1][i].substring(0, 1) === 'I') {\n        spans[spansIndex] += `${item} `;\n      } else {\n        spansIndex++;\n        spans[spansIndex] = item;\n      }\n    });\n    return (\n      <div dir={this.isRTL(answer[0].join(''))} className={style.ner} key={i}>\n        {spans.map((item, i) => {\n          if (reducedColors[i]) {\n            return <NerClass key={i}\n              color={reducedColors[i].color}\n              label={item}\n              text={reducedColors[i].text}\n              tip={reducedColors[i].tip}\n            />;\n          }\n          return `${item} `;\n        },\n      )}\n      </div>\n    );\n  }\n\n  renderBasic = (mes: Answer, i: number) => {\n    const rest = { ...mes };\n    delete rest.answer;\n    delete rest.question;\n    let answer: any = mes.answer[0];\n    if (typeof answer === 'string' && !answer) {\n      answer = this.lang !== 'ru' ? 'I don\\'t know' : 'Я не знаю';\n    }\n    return (\n      <div className={style.basic} dir={this.isRTL(mes.question)} key={i}>\n        <p>{answer}</p>\n        <p>{mes.question}</p>\n        {Object.values(rest).map((item, i) => <p key={i}>{item}</p>)}\n      </div>\n    );\n  }\n\n  renderQA = (mes: Answer, i: number) => {\n    const rest = { ...mes };\n    delete rest.answer;\n    delete rest.question;\n    let answer: any = mes.answer[0];\n    if (typeof answer === 'string' && !answer) {\n      answer = this.lang !== 'ru' ? 'I don\\'t know' : 'Я не знаю';\n    }\n    if (rest.text) {\n      const array = (rest.text as string).split(answer);\n      return (\n        <div className={style.basic} dir={this.isRTL(mes.question)} key={i}>\n          <p>{this.lang !== 'ru' ? 'A: ' : 'O: ' }{answer}</p>\n          <p>{this.lang !== 'ru' ? 'Q: ' : 'В: ' }{mes.question}</p>\n          <p>{array[0]} <NerClass key={i}\n              color={'#0069b4'}\n              label={answer}\n              tip={'A'}\n            /> {array[1]}</p>\n        </div>\n      );\n    }\n    return (\n      <div className={style.basic} dir={this.isRTL(mes.question)} key={i}>\n          <p>{this.lang !== 'ru' ? 'A: ' : 'O: ' }{answer}</p>\n          <p>{this.lang !== 'ru' ? 'Q: ' : 'В: ' }{mes.question}</p>\n        </div>\n    );\n  }\n\n  onAsk =  async () => {\n    if (document.activeElement) {\n      const elem = document.activeElement as HTMLElement;\n      elem.blur();\n    }\n\n    const state = { ...this.state };\n    delete state.error;\n    let checker = true;\n    Object.values(state).forEach((item) => { checker = checker && Boolean(item); });\n    if (!checker) {\n      alert(this.lang !== 'ru' ? 'Fill all fields.' : 'Заполните все поля.');\n      return;\n    }\n\n    const { api, updateStore, title, dispatchLoading, answers } = this.props;\n    dispatchLoading();\n    let messages = answers;\n    const response = await api(this.state).catch((error) => {\n      dispatchLoading();\n      console.error(error);\n      this.setState({ error: true });\n    });\n    if (messages) {\n      messages.splice(0, 0, { ...this.state, answer: response.data[0] });\n    } else {\n      messages = [{ ...this.state, answer: response.data[0] }];\n    }\n\n    window.gtag('event', 'view_item', {\n      event_category: 'Made request',\n      event_label: `${title} ${this.lang}`,\n    });\n    setTimeout(dispatchLoading, 200);\n\n    updateStore(messages);\n\n    const { bottom } = this.answersRef!.current!.getBoundingClientRect();\n    const offset = Math.max(0, window.pageYOffset + bottom - window.innerHeight)\n    window.scrollTo({\n      top: offset,\n      behavior: 'smooth',\n    });\n    this.answersRef!.current!.scrollTop = 0;\n  }\n\n  onFormSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    this.onAsk();\n  }\n\n  onErrorClose = () => this.setState({ error: false });\n\n  render() {\n    const { title, desc, answers, inputs, examples, loading } = this.props;\n    const { error } = this.state;\n    return (\n      <div className={style.container}>\n        {loading && <div className={style.modal}>\n          <div className={style.ldsRing}><div/><div/><div/><div/></div>\n        </div>}\n        {error && <div className={style.modal} onClick={this.onErrorClose}>\n          <div className={style.close}/>\n          <div className={style.error}>\n            {this.lang !== 'ru' ?\n              'Sorry, an error occurred. Please, try again later.' :\n              'Извините, произошла ошибка. Пожалуйста, попробуйте позднее.'\n            }\n          </div>\n        </div>}\n        <p className={style.title}>{title}</p>\n        {desc && <div>{desc}</div>}\n        <div className={style.docker}>\n          <a\n          href=\"https://hub.docker.com/r/deeppavlov\"\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          >\n            <svg width=\"40\" height=\"22\" viewBox=\"0 0 60 43\">\n                <g fill=\"#6395ca\">\n                    {/* tslint:disable-next-line: max-line-length */}\n                    <path d=\"M3.757 15.768h6.04v5.873h-6.04V15.77zM11.17 15.768h6.04v5.873h-6.04V15.77zM11.17 8.24h6.04v5.87h-6.04V8.24zM18.58 15.768h6.043v5.873H18.58V15.77zM18.58 8.24h6.043v5.87H18.58V8.24zM25.993 15.768h6.042v5.873h-6.042V15.77zM25.993 8.24h6.042v5.87h-6.042V8.24zM33.405 15.768h6.042v5.873h-6.042V15.77zM25.993.708h6.042V6.58h-6.042V.708zM12.194 30.12c-.93 0-1.684.733-1.684 1.636 0 .902.755 1.635 1.684 1.635.928 0 1.683-.732 1.683-1.634 0-.903-.755-1.637-1.683-1.637\"/>\n                    {/* tslint:disable-next-line: max-line-length */}\n                    <path d=\"M58.905 18.806c-2.03-1.138-4.73-1.294-7.03-.636-.283-2.377-1.89-4.46-3.8-5.953l-.758-.593-.638.716c-1.28 1.438-1.66 3.83-1.487 5.666.13 1.35.565 2.722 1.42 3.806-.65.38-1.388.682-2.045.9-1.34.44-2.795.685-4.21.685H.613l-.085.89c-.285 2.972.134 5.947 1.398 8.66l.544 1.078.062.1c3.737 6.17 10.3 8.768 17.452 8.768 13.846 0 25.265-6.01 30.51-18.708 3.505.178 7.09-.83 8.805-4.083l.437-.83-.832-.466zm-46.71 16.056c-1.764 0-3.198-1.394-3.198-3.106 0-1.713 1.434-3.107 3.197-3.107 1.763 0 3.197 1.393 3.197 3.106 0 1.712-1.433 3.106-3.196 3.106z\"/>\n                </g>\n            </svg>\n            <code>\n              deeppavlov at Docker Hub\n            </code>\n          </a>\n        </div>\n        <div className={style.inputArea}>\n          <form className={style.inputs} onSubmit={this.onFormSubmit}>\n            {inputs.map(this.renderInput)}\n            <button type=\"button\" onClick={this.onAsk} className={style.button}>\n              {this.lang !== 'ru' ? 'Ask' : 'Спросить'}\n            </button>\n          </form>\n          <div className={style.examples}>\n            <p>{this.lang !== 'ru' ? 'Examples' : 'Примеры'}</p>\n            {examples.map(this.renderExamples)}\n          </div>\n        </div>\n        {answers && <div className={style.answers} id=\"answers\" ref={this.answersRef}>\n          <p>{this.lang !== 'ru' ? 'Results' : 'Результаты'}</p>\n          {(this.renderAnswers(answers))}\n        </div>}\n      </div>\n    );\n  }\n}\n\nfunction withConnect<Req, Res>(stateKey: string) {\n  return connect<StateProps, DispatchProps, BaseSkillProps<Req, Res>>(\n    (state: Store) => ({\n      answers: state[stateKey],\n      loading: state.loading,\n      componentState: state[`${stateKey}Component`],\n    }),\n    (dispatch: Dispatch) => ({\n      updateStore: (messages: any[]) => dispatch(updatestore(stateKey, messages)),\n      dispatchLoading: () => dispatch(RequestLoading()),\n      safeComponentState: (state: State) => dispatch(SCI(`${stateKey}Component`, state)),\n    }),\n  )(withRouter(BaseSkill));\n}\n\nexport default withConnect;\n","import axios from 'axios';\n\n// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\n\nimport { Res } from '../../../lib/api';\ninterface Req {\n  text: string;\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'Ответы на вопросы по тексту',\n  desc: <p>\n    Ответы на вопросы по тексту (Text QA) — это задача поиска ответов на вопросы в известном контексте (например, в параграфе из Википедии). С помощью этого функционала можно искать ответы на вопросы по документации. Больше информации о модели и ее применении читайте в\n    <a href=\"http://docs.deeppavlov.ai/en/master/features/models/squad.html\" target=\"_blank\" rel=\"noopener noreferrer\"> документации</a>.\n    </p>,\n  docker: 'deeppavlov/squad_ru',\n  inputs: [{\n    title: 'Введите текст',\n    type: 'textarea',\n    name: 'text',\n  }, {\n    title: 'Введите вопрос',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    text: 'Одна из наиболее влиятельных групп первой половины 70-х, Kraftwerk, вышедшие из краут-рока, заложили основы всей последующей электронной музыки своими работами, начиная с диска 1974 года Autobahn . Фактически именно Kraftwerk стали переходной ступенью от рок-музыки к новому музыкальному поджанру, в дальнейшем отдалившемуся от собственно рока, однако ставшему огромной частью музыкальной индустрии. Краут-рок в целом (и, в частности, Can и Faust) оказал немалое влияние на развитие альтернативного рока и построка. Влиятельнейшим продюсером краут-рока, разработавшим в какой-то мере его звучание и форму, был Конни Планк.',\n    question: 'Кто был влиятельнейшим продюсером краут-рока?',\n  }, {\n    text: 'Глобализация экономики — сложный и противоречивый процесс. С одной стороны, она облегчает хозяйственное взаимодействие между государствами, создаёт условия для доступа стран к передовым достижениям человечества, обеспечивает экономию ресурсов, стимулирует мировой прогресс. С другой, глобализация ведёт к негативным последствиям: закреплению периферийной модели экономики, потере своих ресурсов странами, не входящими в золотой миллиард . Глобализация распространяет конкурентную борьбу на всех участников, в том числе на слабые страны, что приводит к разорению малого бизнеса, снижению уровня жизни населения и др.',\n    question: 'Что делает глобализация экономики?',\n  }, {\n    text: 'Галилей по праву считается основателем не только экспериментальной, но — в значительной мере — и теоретической физики. В своём научном методе он осознанно сочетал продуманный эксперимент с его рациональным осмыслением и обобщением, и лично дал впечатляющие примеры таких исследований. Иногда из-за недостатка научных данных Галилей ошибался (например, в вопросах о форме планетных орбит, природе комет или причинах приливов), но в подавляющем большинстве случаев его метод приводил к цели. Характерно, что Кеплер, располагавший более полными и точными данными, чем Галилей, сделал правильные выводы в тех случаях, когда Галилей ошибался.',\n    question: 'В чём ошибался Галилей?',\n  }, {\n    text: 'В эпоху перестройки СНГ после обвала СССР, многие испытали шок в связи с переходом экономики на рыночную. Финансовая неграмотность жителей сильно испытывалась в первом десятилетий. Многие договора заключались между собой на основе договора, либо на бумажном носителе, но без оттиска печати нотариуса, который бы утверждал, что нотариус являлся непосредственно свидетелем процесса переговоров и заключения контракта. Такой вид контракта был негативным в силу того, что если вторая сторона договора выполняла свои обязанности не вовремя, либо же отказывалась исполнять, первая сторона не могла это отсудить в суде, ибо сам контракт был заключен неграмотно, с точки зрения законодательной базы.',\n    question: 'В какой период Россия перешла на рыночную экономику?',\n  }, {\n    text: 'Услуги по водоснабжению, водоотведению и очистке сточных вод оказывает компания Vodovod-kanalizacija. Основным источником центрального водоснабжения Любляны являются подземные воды Люблянского поля на правом берегу реки Савы в черте города, а также Люблянского барья к югу от Любляны. Для обеззараживания воды иногда применяется хлор. Центральные очистные сооружения, расположенные на северо-восточной окраине города, перерабатывают 80 тыс. м³ вод в сутки. В центре города в тёплый сезон работают питьевые фонтанчики',\n    question: 'Что порой применяется для обеззараживания вод?',\n  }],\n  api: async (stateReq: Req) => {\n    const req = {\n      context_raw: [stateReq.text],\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7005.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst TexqQA = skillWrapper<Req, Res>('textqaru');\nexport default function () {\n  return <TexqQA {...config}/>;\n}\n","import axios from 'axios';\n// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport { Res } from '../../../lib/api';\n\ninterface Req {\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'Ответы на вопросы',\n  desc: <p>\n    Open Domain Question Answering (ODQA) - это задача поиска ответа на любой вопрос внутри коллекции документов, например, в Википедии.\n     Решение задачи идет в два шага: сначала подбираются релевантные документы, затем в тексте каждого выбирается фраза, предположительно содержащая ответ, и наиболее подходящий отображается на экране.\n     Представленный здесь скил ищет ответы в русскоязычной Википедии.\n     Бизнес решения на основе ODQA - это, например, диалоговые ассистенты, отвечающие на вопросы по корпоративным базам знаний, справочной и технической документации.\n    <br/><br/> Основы практического использования описано в нашем туториале на\n    <a href=\"https://medium.com/deeppavlov/open-domain-question-answering-with-deeppavlov-c665d2ee4d65\" target=\"_blank\" rel=\"noopener noreferrer\"> Medium </a>\n    и в <a href=\"http://docs.deeppavlov.ai/en/master/features/skills/odqa.html\" target=\"_blank\" rel=\"noopener noreferrer\">документации.</a>\n    </p>,\n  docker: 'deeppavlov/odqa_ru',\n  inputs: [{\n    title: 'Введите вопрос',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Как отводятся излишки тепла у млекопитающих?',\n  }, {\n    question: 'Сколько детей родилось в 2008 году у граждан Швейцарии?',\n  }, {\n    question: 'Какое государство берберов считается последним?',\n  }, {\n    question: 'Где расположен международный аэропорт Никола Тесла?',\n  }],\n  api: async (stateReq: Req) => {\n    const req = {\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7012.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst ODQA = skillWrapper<Req, Res>('odqaru');\nexport default function () {\n  return <ODQA {...config}/>;\n}\n","import axios from 'axios';\n\nexport interface StoreReq {\n  question: string;\n}\n\nexport type Res = [string, number, number][];\n\nexport default function (path: string) {\n  return async function (stateReq: StoreReq): Promise<Res> {\n    const req = {\n      x: [stateReq.question],\n    };\n    return await axios.post(path, req);\n  };\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\nimport { renderNerClasses, ruNerStyles } from '../utils';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Распознавание именованных сущностей',\n  desc: <div>\n    NER (Named Entity Recognition) - компонент для распознавания именованных сущностей.\n     Задача заключается в классификации токенов текста по известным категориям - тэгам: имена людей, количество, локации, организации, время и дата, цена и валюта, и т.п.\n    <br/><br/>\n     Здесь представлена модель, обученная на Collection 3 датасете для русского языка.\n     Во вкладке Multi-lang вы найдете мультиязычную модель для 104 языков, обученную на датасете Ontonotes.\n     Наши модели распознают до 19 сущностей. Больше о моделях и их использовании читайте в <a href=\"http://docs.deeppavlov.ai/en/master/features/models/ner.html\" target=\"_blank\" rel=\"noopener noreferrer\">документации.</a>\n    <br/><br/> NER - существенная часть любой диалоговой системы, которая необходима для извлечения машиной информации из текста.\n    <br/>\n    Сущности: {renderNerClasses(ruNerStyles)}\n    </div>,\n  docker: 'deeppavlov/ner_ru',\n  inputs: [{\n    title: 'Введите текст',\n    type: 'textarea',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Российское издательство \" Эксмо \" с июня текущего года управляет издательским и журнальным бизнесом своего конкурента АСТ по договоренности с его акционерами . Об этом рассказал владелец и генеральный директор \" Эксмо \" Олег Новиков , пишет в номере от 26 июня газета \" Ведомости \" . Как указывает издание , \" Эксмо \" получило трехлетний опцион на стопроцентный контроль в трех десятках юридических лиц группы АСТ , в том числе в издательствах \" Астрель \" , АСТ , выпускающем журналы издательстве \" Премьера \" и дистрибуторской компании \" Билония \" . По словам Новикова , в сделку не входит сеть магазинов \" Буква \" , а также ее недвижимость . По расчетам гендиректора \" Эксмо \" , опцион может быть исполнен в течение года . Новиков отметил , что в ближайшее время \" Эксмо \" намерено инвестировать 10-15 миллионов долларов в издательства и дистрибуцию АСТ . Кроме того , владельцы АСТ , хотя и не участвуют больше в управлении группой , имеют право на получение дивидендов в следующем году , до реализации опциона . С учетом дивидендов после осуществления опциона за весь бизнес владельцы АСТ смогут получить около 70 миллионов долларов . В середине мая текущего года газета \" Коммерсантъ \" со ссылкой на неназванные источники написала , что \" Эксмо \" ведет переговоры о поглощении АСТ . Сумма сделки оценивалась в 400 миллионов долларов без учета налоговых претензий к АСТ ( более чем на 190 миллионов долларов ) . Как отметил 26 июня Новиков , будет ли сделка завершена , \" зависит от того , удастся ли спасти бизнес АСТ , который сейчас находится в критическом состоянии \" . В то же время участники рынка опасаются , что сделка приведет к фактической монополизации книжного рынка . Основным владельцем АСТ является кипрская A . A . B . P . Advanced Achievement Books Publishers Ltd . В свою очередь , в число ее акционеров входят бизнесмены Андрей Герцев , Яков Хелемский , Олег Бартенев , Игорь Феоктистов , Юрий Хацкевич и Юрий Дейкало . АСТ не раскрывает свои финансовые показатели . Совладельцами \" Эксмо \" , крупнейшего в России издательства , являются Олег Новиков и Андрей Гредасов . Выручка компании в 2011 году составила шесть миллиардов рублей .',\n  }, {\n    question: 'Италия разместила на открытом рынке бонды на общую сумму 3.91 млрд евро . Спрос на бумаги был хорошим , размещение прошло по верхней границе диапазона , но доходность итальянских облигаций выросла . Рим продал бонды с нулевым купоном , которые будут погашены в 2014 г. на сумму 2.99 млрд евро . Доходность выросла до 4.712 % с 4.037 % на предыдущем аукционе . Еще 916 млн евро казне принесли обыкновенные бонды со сроком обращения 4 и 14 лет . Долговой процент по этим типам бумаг составил 5.2 % и 5.29 % соответственно . Главной причиной роста доходности стало решение Кипра направить европейским партнерам запрос о предоставлении финансовой помощи . Не готов рынок забыть и об испанских проблемах . После того как деньги из общеевропейской копилки решил позаимствовать и Мадрид , игроки все чаще говорят о том , что цепная реакция в еврозоне перекинется и на Италию . Напомним , что правительство Италии одобрило во вторник предоставление финансовой поддержки третьему по величине банку страны Banca Monte dei Paschi di Siena .',\n  }],\n  api: api('https://7004.lnsigo.mipt.ru/model'),\n  renderAnswer: { type: 'ner', colors: ruNerStyles },\n};\n\nconst NER = skillWrapper<StoreReq, Res>('nerru');\nexport default function () {\n  return <NER {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Анализ тональности',\n  desc: <p>\n    Анализ тональности - это задача для автоматизированного выявления в текстах эмоционально окрашенной лексики и эмоциональной оценки авторов (мнений) по отношению к объектам, речь о которых идёт в тексте.\n     Этот компонент позволит вам оценить комментарии о вашем продукте или сервисе.\n     Подробнее смотрите в нашем туториале на\n     <a href=\"https://towardsdatascience.com/the-bert-based-text-classification-models-of-deeppavlov-a85892f14d61\" target=\"_blank\" rel=\"noopener noreferrer\"> Medium </a>\n     и в <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"http://docs.deeppavlov.ai/en/master/features/models/classifiers.html\">документации.</a>\n    </p>,\n  inputs: [{\n    title: 'Введите текст',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Мне фильм показался скучным и затянутым.',\n  }, {\n    question: 'Капец классный чувак.',\n  }, {\n    question: 'Херовая прическа.',\n  }, {\n    question: 'Охеренная прическа.',\n  }],\n  api: api('https://7015.lnsigo.mipt.ru/model'),\n};\n\nconst Sentiment = skillWrapper<StoreReq, Res>('sentimentru');\nexport default function () {\n  return <Sentiment {...config}/>;\n}\n","import axios from 'axios';\n// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\n\nimport { Res } from '../../../lib/api';\ninterface Req {\n  text: string;\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'Text QA',\n  desc: <p>\n    The Question Answering component answers a question based on a given context\n     (e.g, a paragraph of text), where the answer to the question is a segment of the context.\n     This component allows you to answer questions based on your documentation.\n     To learn more on implementation check out our\n    <a href=\"http://docs.deeppavlov.ai/en/master/features/models/squad.html\" target=\"_blank\" rel=\"noopener noreferrer\"> documentation</a>.\n    </p>,\n  docker: 'deeppavlov/squad_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'textarea',\n    name: 'text',\n  }, {\n    title: 'Question',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    text: 'The U.S. is ready to engage in talks about North Korea’s nuclear program even as it maintains pressure on Kim Jong Un’s regime, the Washington Post reported, citing an interview with Vice President Mike Pence. Pence and South Korea’s President Moon Jae-in agreed on a post-Olympics strategy during conversations at the Winter Olympics in the South Korean resort of Pyeongchang that Pence dubbed “maximum pressure and engagement at the same time.” Pence spoke in an interview on his way home from the Winter Olympics. “The point is, no pressure comes off until they are actually doing something that the alliance believes represents a meaningful step toward denuclearization,” the Post quoted Pence as saying. “So the maximum pressure campaign is going to continue and intensify. But if you want to talk, we’ll talk.”',\n    question: 'What country is under the pressure?',\n  }, {\n    text: 'The U.S. is ready to engage in talks about North Korea’s nuclear program even as it maintains pressure on Kim Jong Un’s regime, the Washington Post reported, citing an interview with Vice President Mike Pence. Pence and South Korea’s President Moon Jae-in agreed on a post-Olympics strategy during conversations at the Winter Olympics in the South Korean resort of Pyeongchang that Pence dubbed “maximum pressure and engagement at the same time.” Pence spoke in an interview on his way home from the Winter Olympics. “The point is, no pressure comes off until they are actually doing something that the alliance believes represents a meaningful step toward denuclearization,” the Post quoted Pence as saying. “So the maximum pressure campaign is going to continue and intensify. But if you want to talk, we’ll talk.”',\n    question: 'Who is Mike Pence?',\n  }, {\n    text: 'The U.S. is ready to engage in talks about North Korea’s nuclear program even as it maintains pressure on Kim Jong Un’s regime, the Washington Post reported, citing an interview with Vice President Mike Pence. Pence and South Korea’s President Moon Jae-in agreed on a post-Olympics strategy during conversations at the Winter Olympics in the South Korean resort of Pyeongchang that Pence dubbed “maximum pressure and engagement at the same time.” Pence spoke in an interview on his way home from the Winter Olympics. “The point is, no pressure comes off until they are actually doing something that the alliance believes represents a meaningful step toward denuclearization,” the Post quoted Pence as saying. “So the maximum pressure campaign is going to continue and intensify. But if you want to talk, we’ll talk.”',\n    question: 'Where is the Winter Olympic Games in 2018?',\n  }, {\n    text: 'The most basic method of checking the primality of a given integer n is called trial division. This routine consists of dividing n by each integer m that is greater than 1 and less than or equal to the square root of n. If the result of any of these divisions is an integer, then n is not a prime, otherwise it is a prime. Indeed, if  is composite (with a and b ≠ 1) then one of the factors a or b is necessarily at most . For example, for , the trial divisions are by m = 2, 3, 4, 5, and 6. None of these numbers divides 37, so 37 is prime. This routine can be implemented more efficiently if a complete list of primes up to  is known—then trial divisions need to be checked only for those m that are prime. For example, to check the primality of 37, only three divisions are necessary (m = 2, 3, and 5), given that 4 and 6 are composite.',\n    question: 'How many divisions are required to verify the primality of the number 37?',\n  }, {\n    text: 'The most basic method of checking the primality of a given integer n is called trial division. This routine consists of dividing n by each integer m that is greater than 1 and less than or equal to the square root of n. If the result of any of these divisions is an integer, then n is not a prime, otherwise it is a prime. Indeed, if  is composite (with a and b ≠ 1) then one of the factors a or b is necessarily at most . For example, for , the trial divisions are by m = 2, 3, 4, 5, and 6. None of these numbers divides 37, so 37 is prime. This routine can be implemented more efficiently if a complete list of primes up to  is known—then trial divisions need to be checked only for those m that are prime. For example, to check the primality of 37, only three divisions are necessary (m = 2, 3, and 5), given that 4 and 6 are composite.',\n    question: 'Trial division involves dividing n by every integer m greater than what?',\n  }, {\n    text: 'The most basic method of checking the primality of a given integer n is called trial division. This routine consists of dividing n by each integer m that is greater than 1 and less than or equal to the square root of n. If the result of any of these divisions is an integer, then n is not a prime, otherwise it is a prime. Indeed, if  is composite (with a and b ≠ 1) then one of the factors a or b is necessarily at most . For example, for , the trial divisions are by m = 2, 3, 4, 5, and 6. None of these numbers divides 37, so 37 is prime. This routine can be implemented more efficiently if a complete list of primes up to  is known—then trial divisions need to be checked only for those m that are prime. For example, to check the primality of 37, only three divisions are necessary (m = 2, 3, and 5), given that 4 and 6 are composite.',\n    question: 'What must the integer m be less than or equal to when performing trial division?',\n  }, {\n    text: 'Prince Harry and fiancee American actress Meghan Markle have released more details about their May 19 wedding, revealing that the event will include a carriage ride through Windsor so they can share the big day with the public. The couple will marry at noon in St. George’s Chapel, the 15th century church on the grounds of Windsor Castle that has long been the backdrop of choice for royal occasions. Harry’s grandmother, Queen Elizabeth II, gave permission for use of the venue and will attend the wedding. Kensington Palace said in a statement that the couple is “hugely grateful” for the many good wishes they have received and they hope the carriage ride will give the general public a chance to take part.',\n    question: 'Who is going to marry?',\n  }, {\n    text: 'Prince Harry and fiancee American actress Meghan Markle have released more details about their May 19 wedding, revealing that the event will include a carriage ride through Windsor so they can share the big day with the public. The couple will marry at noon in St. George’s Chapel, the 15th century church on the grounds of Windsor Castle that has long been the backdrop of choice for royal occasions. Harry’s grandmother, Queen Elizabeth II, gave permission for use of the venue and will attend the wedding. Kensington Palace said in a statement that the couple is “hugely grateful” for the many good wishes they have received and they hope the carriage ride will give the general public a chance to take part.',\n    question: 'When will be the wedding?',\n  }, {\n    text: 'Prince Harry and fiancee American actress Meghan Markle have released more details about their May 19 wedding, revealing that the event will include a carriage ride through Windsor so they can share the big day with the public. The couple will marry at noon in St. George’s Chapel, the 15th century church on the grounds of Windsor Castle that has long been the backdrop of choice for royal occasions. Harry’s grandmother, Queen Elizabeth II, gave permission for use of the venue and will attend the wedding. Kensington Palace said in a statement that the couple is “hugely grateful” for the many good wishes they have received and they hope the carriage ride will give the general public a chance to take part.',\n    question: 'Where is St. George’s Chapel located?',\n  }],\n  api: async (stateReq: Req) => {\n    const req = {\n      context_raw: [stateReq.text],\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7008.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst TexqQA = skillWrapper<Req, Res>('textqaen');\nexport default function () {\n  return <TexqQA {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport axios from 'axios';\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport { Res } from '../../../lib/api';\n\ninterface Req {\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'ODQA',\n  desc: <p>\n    Open Domain Question Answering (ODQA) answers any question based on the document collection covering a wide range of topics.\n     The ODQA task combines two challenges of document retrieval (finding the relevant articles) with that of machine comprehension of text (identifying the answer span from those articles).\n     This component can be used to answer questions based on the company knowledge base.\n     This demo uses entire Wikipedia as a knowledge-base.\n     To learn more on implementation read our <a href=\"http://docs.deeppavlov.ai/en/master/features/skills/odqa.html\" target=\"_blank\" rel=\"noopener noreferrer\" >documentation </a>\n     and check out our <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://medium.com/deeppavlov/open-domain-question-answering-with-deeppavlov-c665d2ee4d65\">tutorial</a> on this component.\n    </p>,\n  docker: 'deeppavlov/odqa_en',\n  inputs: [{\n    title: 'Question',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'What does computational linguistics study?',\n  }, {\n    question: 'When did the first moon landing happen?',\n  }, {\n    question: 'Where did guinea pigs originate?',\n  }, {\n    question: 'Who is the Greek god of War?',\n  }],\n  api: async (stateReq: Req) => {\n    const req = {\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7011.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst ODQA = skillWrapper<Req, Res>('odqaen');\nexport default function () {\n  return <ODQA {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Insult detection',\n  desc: <p>\n    Insult detection predicts whether a comment posted during a public discussion is considered insulting to one of the participants.\n     This component is the defense against spam and abuse in your business.\n     To learn more on implementation read our <a href=\"docs.deeppavlov.ai/en/master/features/models/classifiers.html\" target=\"_blank\" rel=\"noopener noreferrer\">documentation.</a>\n    </p>,\n  docker: 'deeppavlov/insults_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Shit happens',\n  }, {\n    question: 'You\\'re just too fat, man',\n  }, {\n    question: 'Money talks and bullshit walks',\n  }, {\n    question: 'You are stupid asshole',\n  }, {\n    question: 'I just fucked up',\n  }, {\n    question: 'Your house is so dirty you have to wipe your feet before you go outside',\n  }],\n  api: api('https://7006.lnsigo.mipt.ru/model'),\n};\n\nconst Insult = skillWrapper<StoreReq, Res>('insulten');\nexport default function () {\n  return <Insult {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\nimport { renderNerClasses, intentsClasses } from '../utils';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Intent classification',\n  desc: <p>\n    Intent classification recognizes intents based on users utterance.\n     This demo was trained on the\n     <a href=\"https://github.com/snipsco/nlu-benchmark/tree/master/2017-06-custom-intent-engines\"> SNIPS </a>\n     dataset that focuses on seven intents <b>SearchCreativeWork</b>, <b>GetWeather</b>, <b>BookRestaurant</b> and others.\n     This component solves various business problems such as ticketing and booking services, renting and scheduling, accepting orders, consulting and customer support.\n     To learn more on implementation read our\n     <a href=\"http://docs.deeppavlov.ai/en/master/features/models/classifiers.html\" target=\"_blank\" rel=\"noopener noreferrer\"> documentation </a>\n     and check out our <a href=\"https://towardsdatascience.com/the-bert-based-text-classification-models-of-deeppavlov-a85892f14d61\" target=\"_blank\" rel=\"noopener noreferrer\">tutorial.</a>\n     <br/><br/>\n    Classes: {renderNerClasses(intentsClasses)}\n    </p>,\n  docker: 'deeppavlov/intents_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Show me the forecast for my upcoming weekend',\n  }, {\n    question: 'Find me the I, Robot television show',\n  }, {\n    question: 'Can I get some Russian cuisine at a restaurant with Shari and I?',\n  }, {\n    question: 'Add Diamonds to my roadtrip playlist',\n  }, {\n    question: 'Play the last track from Beyoncé off Spotify',\n  }, {\n    question: 'Give 6 stars to Of Mice and Men',\n  }, {\n    question: 'Tell me what movies are showing at 7am at the closest movie house',\n  }],\n  api: api('https://7007.lnsigo.mipt.ru/model'),\n  renderAnswer: { type: 'intent', colors: intentsClasses },\n};\n\nconst Intent = skillWrapper<StoreReq, Res>('intenten');\nexport default function () {\n  return <Intent {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\nimport { renderNerClasses, ontonotesClasses } from '../utils';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Name Entity Recognition',\n  desc: <div style={{ marginTop: '1em' }}>\n    Named Entity Recognition (NER) classifies tokens in text into predefined categories (tags), such as <b>person names</b>, <b>quantity expressions</b>, <b>percentage expressions</b>, <b>names of locations</b>, <b>organizations</b>, as well as expression of <b>time</b>, <b>currency</b> and others. We can recognize up to 19 entities. DeepPavlov also features a multilingual model that is available for 104 languages. NER can be used as a knowledge extractor when you are interested in a piece of certain information in your text. To learn more on implementation read our <a href=\"http://docs.deeppavlov.ai/en/master/features/models/ner.html\" target=\"_blank\" rel=\"noopener noreferrer\">documentation.</a>\n    <br/><br/>\n    Click on an entity to see its class description\n    <br/>\n    Classes: {renderNerClasses(ontonotesClasses)}\n    </div>,\n  docker: 'deeppavlov/ner_en',\n  inputs: [{\n    title: 'Question',\n    type: 'textarea',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'Computer Sciences Corp . , El Segundo , Calif . , said it is close to making final an agreement to buy Cleveland Consulting Associates from Saatchi & Saatchi',\n  }, {\n    question: 'Imo Industries Inc . -- $ 150 million of senior subordinated debentures due 2001 , priced at par to yield 12 % . ',\n  }, {\n    question: 'Gill & Duffus Ltd. , a British cocoa - trading house , estimated that the 1989 - 90 world cocoa surplus would be 231,000 tons , down from 314,000 tons for the previous year .',\n  }, {\n    question: 'Amtech , which also provides technical temporary employment services to aerospace , defense , computer and high - tech companies in the Southwest and Baltimore - Washington areas , said its final audited results are due in late November .',\n  }, {\n    question: 'Following the impeachment conviction , Dr. Benjamin Hooks , executive director of the National Association for the Advancement of Colored People , issued a restrained statement , warning that the Hastings case could set a \" dangerous precedent , \" but adding , \" We must respect the considered judgment of the Senate . \"',\n  }],\n  api: api('https://7010.lnsigo.mipt.ru/model'),\n  renderAnswer: { type: 'ner', colors: ontonotesClasses },\n};\n\nconst NER = skillWrapper<StoreReq, Res>('neren');\nexport default function () {\n  return <NER {...config}/>;\n}\n","import React, { Component, ChangeEvent, createRef, SyntheticEvent, KeyboardEvent } from 'react';\nimport { Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { State as Store, updatestore, loading as RequestLoading, SCI } from '../../../lib/store';\n\nimport style from './ChatSkill.module.scss';\n// Moved interfaces into index file because of --isolatedModules\n// https://github.com/Microsoft/TypeScript/issues/21194\nimport { ChatSkillProps, DispatchProps, StateProps, Answer } from '.';\ntype Props<Res = any> = ChatSkillProps<Res> & DispatchProps & StateProps & RouteComponentProps;\ninterface State {\n  error: any;\n  message: string;\n  agreed: boolean;\n}\n\nclass ChatSkill extends Component<Props, State> {\n  lang: 'ru' | 'en' | 'mu';\n  answersRef: React.RefObject<HTMLDivElement>;\n  inputRef: React.RefObject<HTMLDivElement>;\n\n  constructor(props: Props) {\n    super(props);\n    const { location: { pathname }, componentState } = props;\n    let initState: any = {};\n    if (componentState) {\n      initState = componentState;\n    }\n    else {\n      initState['message'] = '';\n      initState['agreed'] = false;\n    }\n    this.state = initState;\n    this.lang = pathname.split('/')[1] as 'ru' | 'en' | 'mu';\n    this.answersRef = createRef();\n    this.inputRef = createRef();\n  }\n\n  componentDidMount () {\n    const { title } = this.props;\n    window.gtag('event', 'view_item', {\n      event_category: 'Open page',\n      event_label: `${title} ${this.lang}`,\n    });\n\n    this.scrollMessages('auto');\n    this.scrollToInput();\n  }\n\n  componentWillUnmount () {\n    const { safeComponentState } = this.props;\n    safeComponentState(this.state);\n  }\n\n  isRTL = (s: string) => {\n    const ltrChars = 'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF' +\n      '\\u2C00-\\uFB1C\\uFDFE-\\uFE6F\\uFEFD-\\uFFFF';\n    const rtlChars = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC';\n    const rtlDirCheck = new RegExp(`^[^${ltrChars}]*[${rtlChars}]`);\n\n    return rtlDirCheck.test(s) ? 'rtl' : 'ltr';\n  }\n\n  onCntrlEnterPress = (e: KeyboardEvent) => {\n    e.persist();\n    if (e.key === 'Enter' && e.ctrlKey) {\n      this.onAsk();\n    }\n  }\n\n  renderAnswers = (answers: Answer[]) => {\n    return answers.map(this.renderBasic);\n  }\n\n  renderBasic = (mes: Answer, i: number) => {\n    const rest = { ...mes };\n    delete rest.answer;\n    delete rest.question;\n    let answer: any = mes.answer;\n    return [\n      <div className={style.user} dir={this.isRTL(mes.question)} key={`question${i}`}>\n        <p>{mes.question}</p>\n      </div>,\n      <div className={style.bot} dir={this.isRTL(mes.question)} key={`answer${i}`}>\n        <p>{answer}</p>\n      </div>\n    ];\n  }\n\n  scrollMessages = (behavior: 'smooth' | 'auto' = 'smooth') => {\n    const answersDiv = this.answersRef!.current;\n    if (answersDiv) {\n      answersDiv.scrollTo({\n        top: answersDiv.scrollHeight,\n        behavior\n      })\n    }\n  }\n\n  scrollToInput = () => {\n    const inputDiv = this.inputRef!.current!;\n    if (inputDiv == null) {\n      return;\n    }\n    const { top, bottom } = inputDiv.getBoundingClientRect();\n    if (top < 0 || bottom > window.innerHeight){\n      const offset = Math.max(0, window.pageYOffset + bottom - window.innerHeight)\n      window.scrollTo({\n        top: offset,\n        behavior: 'smooth',\n      });\n      function scrollListener(){\n        if (window.pageYOffset === offset) {\n          window.removeEventListener('scroll', scrollListener);\n          inputDiv.getElementsByTagName('input')[0].focus();\n        }\n      }\n      window.addEventListener('scroll', scrollListener);\n    }\n    else{\n      inputDiv.getElementsByTagName('input')[0].focus();\n    }\n  }\n\n  onAsk =  async () => {\n\n    const state = { ...this.state };\n    delete state.error;\n\n    const { messageApi, updateStore, title, dispatchLoading, answers } = this.props;\n    const question = this.state['message'];\n    if (question.length === 0) {\n      return;\n    }\n    if (document.activeElement) {\n      const elem = document.activeElement as HTMLElement;\n      elem.blur();\n    }\n    dispatchLoading();\n    let messages = answers || [];\n    const response = await messageApi(question).catch((error) => {\n      dispatchLoading();\n      console.error(error);\n      this.setState({ error: true });\n    });\n    if (!response) {\n      return;\n    }\n\n    let answer: string = response.data.response;\n    if (answer){\n      const commentIndex = answer.indexOf('#+#');\n      if (commentIndex > -1) {\n        answer = answer.substring(0, commentIndex);\n      }\n      answer = answer.trim()\n      messages.push({ question: question, answer: answer });\n    }\n\n    window.gtag('event', 'view_item', {\n      event_category: 'Made request',\n      event_label: `${title} ${this.lang}`,\n    });\n    setTimeout(dispatchLoading, 200);\n\n    updateStore(messages);\n\n    this.scrollMessages();\n\n    this.scrollToInput();\n    this.setState({ 'message': '' });\n  }\n\n  reset = async () => {\n    const {resetApi, updateStore, dispatchLoading} = this.props;\n    dispatchLoading();\n    await resetApi().catch((error) => {\n      dispatchLoading();\n      console.error(error);\n      this.setState({ error: true });\n    });\n    setTimeout(dispatchLoading, 200);\n    updateStore([]);\n  }\n\n  agree = () => {\n    this.setState({ agreed: true }, this.scrollToInput);\n  }\n\n  onFormSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    this.onAsk();\n  }\n\n  onErrorClose = () => this.setState({ error: false });\n\n  render() {\n    const { title, desc, answers, loading } = this.props;\n    const { agreed, error } = this.state;\n    return (\n      <div className={style.container}>\n        {loading && <div className={style.modal}>\n          <div className={style.ldsRing}><div/><div/><div/><div/></div>\n        </div>}\n        {error && <div className={style.modal} onClick={this.onErrorClose}>\n          <div className={style.close}/>\n          <div className={style.error}>\n            {this.lang !== 'ru' ?\n              'Sorry, an error occurred. Please, try again later.' :\n              'Извините, произошла ошибка. Пожалуйста, попробуйте позднее.'\n            }\n          </div>\n        </div>}\n        <p className={style.title}>{title}</p>\n        {desc && <div>{desc}</div>}\n        \n        {agreed && answers && answers.length>0 && <div className={style.answers} id=\"answers\" ref={this.answersRef}>\n          {(this.renderAnswers(answers))}\n        </div>}\n        {agreed && <div className={style.inputArea}>\n          <form className={style.inputs} onSubmit={this.onFormSubmit}>\n            <div className={style.inputGroup} ref={this.inputRef}>\n              <input\n                placeholder={this.lang !== 'ru' ? 'Write a message...' : 'Написать сообщение...'}\n                value={this.state['message']}\n                onChange={(e: ChangeEvent<HTMLInputElement>) => this.setState({ 'message': e.target.value })}\n                onKeyPress={this.onCntrlEnterPress}\n                className={style.formControl}\n              />\n              <div className={style.inputGroupAppend}>\n                <button type=\"button\" onClick={this.onAsk} className={style.button}>\n                  {this.lang !== 'ru' ? 'Send' : 'Отправить'}\n                </button>\n              </div>\n            </div>\n            <button type=\"button\" onClick={this.reset} className={style.button}>\n              {this.lang !== 'ru' ? 'Start new dialog' : 'Начать новый диалог'}\n            </button>\n          </form>\n        </div>}\n        {!agreed && <div className={style.disclaimer}>\n          <h1>Disclaimer of responsibility</h1>\n          <p>Bot responses are generated automatically. MIPT (TIN 5008006211) shall bear no responsibility for accuracy, relevance, correctness of the information received by the User through the chat bot.</p>\n<p>MIPT (TIN 5008006211) shall bear no responsibility for the information received by the User through the chatbot, including if this information hurts the user's feelings related to ethics and standards of living. Information received by the User through the bot does not appeal for any actions, including ethnic and religious hatred, does not promote anything, including non-traditional sexual orientation, violence, drug use, alcohol and smoking, it’s not intended to offend anyone’s feelings on religious, gender, political or any other grounds, including insulting government officials and state symbols of any country.</p>\n<p>MIPT (TIN  5008006211) shall bear no responsibility for the information received by the User through the bot, including, but not limited, if this information violates the rights of the third parties to intellectual property and equivalent means of identification, the right to information constituting a trade secret, the rights of minors, contains negative and critical statements regarding religion, politics, racial, ethnic, gender, personal qualities and abilities, sexual orientation and appearance of the third  parties, contains insults to specific individuals or organizations, violates generally accepted moral standards and ethical norms, promotes hatred and / or discrimination.</p>\n<p>By using the bot, you explicitly give permission for your anonymized conversation data to be released publicly in any sources and by any ways.</p>\n<p>MIPT (TIN 5008006211) has the right to store conversation data without compliance special requirements.</p>\n<p>If you consider this unacceptable, we kindly ask you not to use the bot. By using the chat bot, you explicitly give your permission to receive any information; all claims and complaints on bot functioning shall not be considered by MIPT (TIN 5008006211).</p>\n            <button type=\"button\" onClick={this.agree} className={style.button}>Agree</button>\n        </div>}\n      </div>\n    );\n  }\n}\n\nfunction withConnect(stateKey: string) {\n  return connect<StateProps, DispatchProps>(\n    (state: Store) => ({\n      answers: state[stateKey],\n      loading: state.loading,\n      componentState: state[`${stateKey}Component`],\n    }),\n    (dispatch: Dispatch) => ({\n      updateStore: (messages: any[]) => dispatch(updatestore(stateKey, messages)),\n      dispatchLoading: () => dispatch(RequestLoading()),\n      safeComponentState: (state: State) => dispatch(SCI(`${stateKey}Component`, state)),\n    }),\n  )(withRouter(ChatSkill));\n}\n\nexport default withConnect;\n","// tslint:disable: max-line-length\nimport axios from 'axios';\nimport React from 'react';\nimport uuidv4 from 'uuid/v4';\nimport skillWrapper, { ChatSkillProps } from '../ChatSkill';\nimport { Res } from '../../../lib/api';\n\nconst apiUrl = 'https://7056.lnsigo.mipt.ru/';\nconst uid: string = uuidv4();\n\nasync function chatApi(text: string): Promise<Res> {\n  const req = {\n    user_id: uid,\n    payload: text,\n  };\n  return await axios.post(apiUrl, req, {\n    headers: {\n        'Content-Type': 'application/json',\n    }});\n}\n\nconst config: ChatSkillProps<Res> = {\n  title: 'DREAM Socialbot',\n  desc: <div style={{ marginTop: '1em' }}>A virtual character able to provide entertainment with useful and funny facts,\n   as well as, engage its partner into a deeper discussion on topics of interest in a natural way.</div>,\n  messageApi: chatApi,\n  resetApi: async () => await chatApi('/start')\n};\n\nconst Chat = skillWrapper('chaten');\nexport default function () {\n  return <Chat {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Ranking',\n  desc: <p>\n    The ranking component solves the tasks of ranking and paraphrases identification based on siamese neural networks with integrated semantic similarity measure.\n     The component retrieves the semantically closest response from a set of predefined responses. To learn more on implementation check out our <a href=\"https://deeppavlov.readthedocs.io/en/master/features/models/neural_ranking.html\" target=\"_blank\" rel=\"noopener noreferrer\">documentation.</a><br/>\n     This demo was trained on the <a href=\"https://github.com/shuzi/insuranceQA\" target=\"_blank\" rel=\"noopener noreferrer\">InsuranceQA V1</a> dataset.\n    </p>,\n  docker: 'deeppavlov/ranking_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    question: 'What is the price for home insurance?',\n  }, {\n    question: 'Fire occured in my home, is it covered by insurance?',\n  }, {\n    question: 'What is disability insurance?',\n  }, {\n    question: 'Appeal of insurance denial?',\n  }],\n  api: api('https://7009.lnsigo.mipt.ru/model'),\n  renderAnswer: { type: 'ranking' },\n};\n\nconst ODQA = skillWrapper<StoreReq, Res>('rankingen');\nexport default function () {\n  return <ODQA {...config}/>;\n}\n","import axios from 'axios';\n\n// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\n\nimport { Res } from '../../../lib/api';\ninterface Req {\n  text: string;\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'Text QA',\n  desc: <p>\n    The Question Answering component answers a question based on a given context\n     (e.g, a paragraph of text), where the answer to the question is a segment of the context.\n     This component allows you to answer questions based on your documentation.\n     To learn more on implementation check out our\n    <a href=\"http://docs.deeppavlov.ai/en/master/features/models/squad.html\" target=\"_blank\" rel=\"noopener noreferrer\"> documentation</a>.\n    </p>,\n  docker: 'deeppavlov/squad_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'textarea',\n    name: 'text',\n  }, {\n    title: 'Question',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    text: 'Волосы у меня на груди окрасились, потому что я пролил на них ракетный окислитель. Лет мне двадцать девять, скоро юбилей. А в армии я потому, что меня жена с тёщей хотели в сумасшедший дом отдать — за убеждения',\n    question: 'Почему у тебя волосы на груди окрасились?',\n  }, {\n    text: `Sri Lanka was known from the beginning of British colonial rule as Ceylon (/sɪˈlɒn/, US also /seɪˈlɒn/).\n    A nationalist political movement arose in the country in the early 20th century to obtain political independence, which was granted in 1948; the country became a republic and adopted its current name in 1972.\n    Sri Lanka's recent history has been marred by a 26-year civil war, which ended decisively when the Sri Lanka Armed Forces defeated the Liberation Tigers of Tamil Eelam (LTTE) in 2009.\n    The current constitution stipulates the political system as a republic and a unitary state governed by a semi-presidential system.\n    It has had a long history of international engagement, as a founding member of the South Asian Association for Regional Cooperation (SAARC), and a member of the United Nations, the Commonwealth of Nations, the G77, and the Non-Aligned Movement.\n    Along with the Maldives, Sri Lanka is one of only two South Asian countries rated \"high\" on the Human Development Index (HDI), with its HDI rating and per capita income the highest among South Asian nations.\n    The Sri Lankan constitution accords Buddhism the \"foremost place\", although it does not identify it as a state religion. Buddhism is given special privileges in the Sri Lankan constitution.`,\n    question: 'What is SAARC?',\n  }, {\n    text: `Su área de distribución comprende casi toda Sudamérica al este de los Andes en las cuencas del río Orinoco, del Amazonas y del Río de la Plata; cubriendo desde el este de Venezuela y la Guyana hasta Uruguay y el norte y centro de Argentina.\n    Pueden vivir en diferentes tipos de hábitat, pero muestran preferencia por algunos en concreto. Suelen encontrarse cerca de lagos, ríos, marismas o manglares.\n    También necesitan un suelo firme para dormir, idealmente con una vegetación espesa que les sirve de protección.\n    Para alimentarse no tienen problema en adentrarse por la sabana y herbazales.\n    La mayor densidad de población de carpinchos se encuentra en las extensas zonas húmedas de Sudamérica, como el Pantanal, o la región de los Llanos del norte del continente, bañada por el río Orinoco. Viven mayoritariamente en las llanuras, pero también habitan en altitudes de hasta 1300 metros por sobre el nivel del mar.\n    En comparación con otras especies animales de Sudamérica, las capibaras toleran bastante bien los cambios de hábitat provocados por la actividad humana, y también pueden sobrevivir en zonas transformadas en plantaciones o pastos.`,\n    question: '¿En qué países viven los capibaras?',\n  }, {\n    text: `Su área de distribución comprende casi toda Sudamérica al este de los Andes en las cuencas del río Orinoco, del Amazonas y del Río de la Plata; cubriendo desde el este de Venezuela y la Guyana hasta Uruguay y el norte y centro de Argentina.\n    Pueden vivir en diferentes tipos de hábitat, pero muestran preferencia por algunos en concreto. Suelen encontrarse cerca de lagos, ríos, marismas o manglares.\n    También necesitan un suelo firme para dormir, idealmente con una vegetación espesa que les sirve de protección.\n    Para alimentarse no tienen problema en adentrarse por la sabana y herbazales.\n    La mayor densidad de población de carpinchos se encuentra en las extensas zonas húmedas de Sudamérica, como el Pantanal, o la región de los Llanos del norte del continente, bañada por el río Orinoco. Viven mayoritariamente en las llanuras, pero también habitan en altitudes de hasta 1300 metros por sobre el nivel del mar.\n    En comparación con otras especies animales de Sudamérica, las capibaras toleran bastante bien los cambios de hábitat provocados por la actividad humana, y también pueden sobrevivir en zonas transformadas en plantaciones o pastos.`,\n    question: 'What countries do capybara live in?',\n  }, {\n    text: `Rosjanie zawsze odnosili wielkie sukcesy pod względem liczby utalentowanych sportowców i ilości zdobytych medali na igrzyskach olimpijskich oraz w innych zawodach międzynarodowych.\n    W przeciągu istnienia ZSRR radzieccy olimpijczycy zdobyli największą liczbę medali na 14 spośród 18 olimpiad.\n    Biorąc pod uwagę ten fakt, można stwierdzić, iż Związek Radziecki był w owym czasie dominującą potęgą sportową.\n    Począwszy od Olimpiady Letniej w 1952 r. sportowcy radzieccy zawsze byli w pierwszej trójce pod względem liczby zdobytych złotych medali. W 1980 r. Letnie Igrzyska Olimpijskie miały miejsce w Moskwie, a w 2014 r. Zimowe Igrzyska odbyły się w Soczi.\n    2 grudnia 2010 r. Komitet Wykonawczy FIFA powierzył Rosji organizację mistrzostw świata w piłce nożnej w 2018 r.`,\n    question: 'Gdzie odbyła się Olimpiada w 1980 roku?',\n  }, {\n    text: `Kirjasarjan ensimmäinen osa Harry Potter ja viisasten kivi (engl. Harry Potter and the Philosopher's Stone) ilmestyi alkuperäiskielellä vuonna 1997 ja sen viimeinen osa Harry Potter ja kuoleman varjelukset (engl. Harry Potter and the Deathly Hallows) vuonna 2007.\n    Ensimmäisen kirjan julkaisusta lähtien kirjasarja on saanut suurta suosiota ympäri maailmaa, ja se on ollut sekä arvostelu- että taloudellinen menestys. Kirjasarja on myynyt yli 500 miljoonaa kappaletta ja se on käännetty yli 73 kielelle.\n    Suomeksi Harry Potter -kirjasarjan kustansi Tammi ja sen käänsi Jaana Kapari-Jatta. Kirjasarja julkaistiin suomeksi vuosina 1998–2008.\n    Rowlingin tarinaan perustuva näytelmä, Harry Potter ja kirottu lapsi, sai ensi-iltansa Lontoossa 30. heinäkuuta 2016, ja sen käsikirjoitus julkaistiin myöhemmin kirjan muodossa.`,\n    question: 'Milloin kirjasarja julkaistiin suomeksi?',\n  }, {\n    text: `Kirjasarjan ensimmäinen osa Harry Potter ja viisasten kivi (engl. Harry Potter and the Philosopher's Stone) ilmestyi alkuperäiskielellä vuonna 1997 ja sen viimeinen osa Harry Potter ja kuoleman varjelukset (engl. Harry Potter and the Deathly Hallows) vuonna 2007.\n    Ensimmäisen kirjan julkaisusta lähtien kirjasarja on saanut suurta suosiota ympäri maailmaa, ja se on ollut sekä arvostelu- että taloudellinen menestys. Kirjasarja on myynyt yli 500 miljoonaa kappaletta ja se on käännetty yli 73 kielelle.\n    Suomeksi Harry Potter -kirjasarjan kustansi Tammi ja sen käänsi Jaana Kapari-Jatta. Kirjasarja julkaistiin suomeksi vuosina 1998–2008.\n    Rowlingin tarinaan perustuva näytelmä, Harry Potter ja kirottu lapsi, sai ensi-iltansa Lontoossa 30. heinäkuuta 2016, ja sen käsikirjoitus julkaistiin myöhemmin kirjan muodossa.`,\n    question: 'Как называется последняя книга про Гарри Поттера?',\n  }],\n  api: async (stateReq: Req) => {\n    const req = {\n      context_raw: [stateReq.text],\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7014.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst TexqQA = skillWrapper<Req, Res>('textqamu');\nexport default function () {\n  return <TexqQA {...config}/>;\n}\n","// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\nimport api, { Res, StoreReq } from '../../../lib/api';\nimport { renderNerClasses, ontonotesClasses } from '../utils';\n\nconst config: BaseSkillProps<StoreReq, Res> = {\n  title: 'Name Entity Recognition',\n  desc: <div>\n    Named Entity Recognition (NER) classifies tokens in text into predefined categories (tags), such as <b>person names</b>, <b>quantity expressions</b>, <b>percentage expressions</b>, <b>names of locations</b>, <b>organizations</b>, as well as expression of <b>time</b>, <b>currency</b> and others. We can recognize up to 19 entities. DeepPavlov also features a multilingual model that is available for 104 languages. NER can be used as a knowledge extractor when you are interested in a piece of certain information in your text. To learn more on implementation read our <a href=\"http://docs.deeppavlov.ai/en/master/features/models/ner.html\" target=\"_blank\" rel=\"noopener noreferrer\">documentation.</a>\n    <br/>\n    Number of defined classes depends on the language.\n    <br/>\n    <br/>\n    Click on an entity to see its class description\n    <br/>\n    Classes: {renderNerClasses(ontonotesClasses)}\n    </div>,\n  docker: 'deeppavlov/ner_ml',\n  inputs: [{\n    title: 'Question',\n    type: 'textarea',\n    name: 'question',\n  }],\n  examples: [{\n    question: `Icy conditions have swept across eastern Australia, bringing snow to areas as far north as subtropical Queensland. Australia's Bureau of Meteorology described it as a \"rare\" sight, noting the state had not experienced significant snowfall since 2015. Severe weather warnings have also been issued for a 1,000km (620 miles) stretch of coast which includes Sydney. Meteorologist Lachlan Stone said the snowfall in Queensland was an unusual occurrence in a state with a sub-tropical to tropical climate.`,\n  }, {\n    question: 'Члены Американской академии киноискусств решили присудить режиссеру Дэвиду Линчу почетную премию \"Оскар\" за выдающийся вклад в кинематограф, сообщается на сайте академии. Церемония награждения пройдет 27 октября в развлекательном комплексе Hollywood and Highland Center в Лос-Анджелесе (штат Калифорния, США).',\n  }, {\n    question: 'Після аномальної весни, що увійшла в десятку найтепліших за 139 років спостережень, літо теж починаєтся зі спеки. Про це повідомила синоптик Наталка Діденко на своїй сторінці в соцмережі Facebook. Так, у середу 5 червня Україна буде залишатися однією з найбільш спекотних країн Європи: завтра вдень очікується + 24 + 29 градусів, на Сході та Півдні +28 +33 градуси. За словами синоптика, у Франції, Великобританії і місцями навіть в Іспанії та Португалії в середу похолодає до + 10 + 15 градусів і пройдуть дощі.',\n  }, {\n    question: 'Poznań liegt auf halbem Weg zwischen Warschau und Berlin – diese Städte waren wichtig für den Dirigenten und Komponisten Ignatz Waghalter, einen der Mitbegründer der Deutschen Oper in Berlin-Charlottenburg. Das Orchester der Philharmonie Poznań widmet sich jetzt bereits zum zweiten Mal der Musik dieses aus Deutschland vertriebenen Komponisten. Waghalter stammte aus einer jüdischen Warschauer Familie.',\n  }, {\n    question: 'Así ha calificado en un comunicado Jay Timmons, el consejero delegado de la Asociación de Manufacturas de EEUU, la amenaza de Donald Trump de empezar el 10 de junio a imponer aranceles del 5% a la importación de bienes mexicanos e irlos subiendo hasta el mes de octubre, cuando alcanzarían el 25%. En total, el 80% de las exportaciones mexicanas van a Estados Unidos. Según Gregory Daco, economista jefe de la consultora Oxford Economics, unos aranceles del 25% rebañarían al menos siete décimas de crecimiento de EEUU en 2020, hasta dejarlo en un minúsculo 1%. Para México las consecuencias podrían ser devastadoras, y el país quedaría sepultado en una recesión.',\n  }, {\n    question: 'Geçtiğimiz sezonun devre arasında Sassuolo’ya transfer olan Merih Demiral, gösterdiği performans sonrası İtalya Seria A’nın son şampiyonu Juventus’a transfer oldu. İtalyan gazeteci Gianluca Di Marzio,kişisel twitter hesabında Merih Demiral’ın Juventus’a transferinin sonuçlandığını ve Merih’in Juventus ile 5 yıllık sözleşme imzalayacağını söyledi. Juventus, Merih’in transferi için Sassuolo’ya 15 milyon euro bonservis bedeli ödeyeceğini açıkladı.',\n  }],\n  api: api('https://7013.lnsigo.mipt.ru/model'),\n  renderAnswer: { type: 'ner', colors: ontonotesClasses },\n};\n\nconst NER = skillWrapper<StoreReq, Res>('nermu');\nexport default function () {\n  return <NER {...config}/>;\n}\n","import axios from 'axios';\n// tslint:disable: max-line-length\nimport React from 'react';\nimport skillWrapper, { BaseSkillProps } from '../BaseSkill';\n\nimport { Res } from '../../../lib/api';\ninterface Req {\n  text: string;\n  question: string;\n}\n\nconst config: BaseSkillProps<Req, Res> = {\n  title: 'Text QA',\n  desc: <p>\n    The Question Answering component answers a question based on a given context (e.g, a paragraph of text), where the answer to the question is a segment of the context. This component allows you to answer questions based on your documentation. To learn more on implementation check out our\n    <a href=\"http://docs.deeppavlov.ai/en/master/features/models/squad.html\" target=\"_blank\" rel=\"noopener noreferrer\"> documentation</a>.\n    </p>,\n  // docker: 'deeppavlov/squad_en',\n  inputs: [{\n    title: 'Enter text',\n    type: 'textarea',\n    name: 'text',\n  }, {\n    title: 'Question',\n    type: 'text',\n    name: 'question',\n  }],\n  examples: [{\n    text: \"北角、冊魚涌舊樓區:這一帶的人口以閩籍為主要多數，是銅鑼灣一帶人口的延續，民國時期人口不及銅鑼灣一帶多，但戰後香港人口由50萬上升到220萬，數十萬閩籍人口南下，很多都進入北角區，北角成為全世界人口最密集的地區，而人口以福建籍為壓倒性多數，這些人口或他們的第二、三代成為東區私樓人口的大部份，不少人仍懂或仍說閩南話，北角新樓亦有不少閩籍富商聚居，由銅鑼灣、跑馬地一直到冊魚涌的華人人口都是以閩籍為大多數，而北角則在中心，北角一帶亦是廣為人知的小福建社區，維多利中心的福建社團聯會為近年全港閩籍人口聯誼的地方，亦有其餘商家，構成多元文化，銅鑼灣以及北角亦有不少閩語系富商華僑聚居，不少南洋商家後代手持最少數個物業。隨住語文統一，這一帶營商的人以及住客亦有不少為非閩籍，閩籍商家亦歡迎非閩籍人口租住或購買這一帶的物業。近年很多內地人在北角站一帶街道上，使環境變差，加上蔡素玉議員熱心幫助新移民，北角站一帶有不少新移民以及內地旅客，春秧街、馬寶道一帶的商販實有部份為福建籍以及上海籍新移民。\",\n    question: \"戰後全世界人口最密集的地區是哪裡?\",\n  }, {\n    text: \"烈女義坑有個傳說，為清朝末年，一漁人遭海盜殺害，漁人之妻不願受辱，在此跳崖自殺，後人感念烈女殉節義舉，乃命名為烈女義坑。山崖距海高達數十丈，氣勢奇偉，是拍照留念的最佳景點之一。一線天位於烈女義坑不遠的軍事據點，在兩垂直相臨的山崖中，軍事坑道靠一座水泥橋相連，橋面距海面數十丈，氣勢懾人。旅客參觀一線天之前，須先前往東引遊客服務中心申請參觀證，經衛兵陪同下，前往參觀、拍照。由於一線天目前仍屬重要軍事基地，除非經由地方軍事首長允許，一般旅客不可進入坑道內參觀。太白天聲位於東引燈塔下方海岸，指的是一處險峻尖聳的巨石，每到3至5月的霧季，煙霧朦朧的霧氣就會將石頭遮掩，若隱若現的朦朧美景，讓人彷彿置身太虛幻境中，因此有「太白天聲」之說。遊客可漫步至觀景台，清楚瞭望整個大自然渾然天成的秀麗景色。\",\n    question: \"烈女義坑的生成與何時發生的事件有關？\"\n  }, {\n    text: \"網球正拍擊球指右手球員從身體右側擊球，擊球後球拍從體前划過，最後停留在身體左側。左手球員相反。它是網球基本技術中常用的擊球方法，往往是初學者最先學習的技術，包括上旋球、下旋球、平擊球等。正手上旋球速度快，而且不易失誤，往往用於進攻和雙方僵持對拉。正手的握拍有大陸式、東方式、半西方式和西方式。大陸式可以打出下旋球，同時方便反手擊球。半西方式和西方式有利於打出強烈的上旋。正手一般是單手握拍，但也有一些優秀運動員採用正手雙手握拍。反手擊球指右手球員從身體左側引拍擊球，擊球後球拍從體前划過，最後停留在身體右側。左手球員相反。相對於正手擊球，反手擊球較難掌握。反手擊球根據球的旋轉可分為上旋、下旋和平擊，根據握拍手可分為單手反拍和雙手反拍。單手反拍就是僅僅用持球手反手擊球，控制的範圍大，便於偽裝放小球，但穩定性較雙反差。雙手反拍是利用另一隻手輔助持拍手反手擊球，一般比單手反拍產生更大的力量，穩定性好，但需要更精密的步伐配合。在20世紀多數優秀的網球選手採用單手反拍，但1970年代後越來越多的選手採用雙反，目前大多職業選手選擇了雙反，包括拉斐爾·納達爾和小威廉絲。\",\n    question: \"正拍擊球加上大陸式的握拍方法可以打出什麼樣的球？\",\n  }, {\n    text: \"灣仔向海的方向則有戰後1950年代至1960年代香港紅燈區所在地的駱克道、謝斐道，至今仍然有不少酒吧及一些夜總會位於這兩條街道附近，曾經大為有名的杜老誌夜總會亦是位於這裏。最後向北橫過了告士打道，進入高速發展的1970年代至1990年代，是商業區及酒店區。有各式的高樓大廈及世界級名建築，見證香港經濟的繁盛及財富的累積。此處名建築物包括有香港會議展覽中心、香港演藝學院、中環廣場等。最接近維多利亞港海旁的，是1997年香港主權移交時典禮使用的會展新翼，和象徵回歸的金紫荊廣場。灣仔亦曾一度擁有為數眾多的電影院，當中很多現已不復存在。已消失的電影院包括：香港大舞台、東方戲院、國泰戲院、京都戲院、南洋戲院、東城戲院、國民戲院、環球戲院。\",\n    question: \"謝斐道和哪一條街道是1950、60年代灣仔的紅燈區？\",\n  }, {\n    text: \"要探討從梨俱吠陀到波你尼時代梵語的發展，可以考察印度教其它文本，如娑摩吠陀、夜柔吠陀、阿闥婆吠陀、梵書和奧義書。在此期間，這門語言的威望、它的神聖用途及其正確發音的重要性，形成了一股強大的保守力量，防止梵語像普通語言一樣隨時間而演變。現存最古老的梵語文法是波你尼的《八篇書》，大約於公元前四世紀成形。它本質上是規範性文法，就是說它定義了正確梵語的用法，儘管它包含了描述成分，但大多是處理在波你尼時代已經廢棄了的某些吠陀形式。這裡所說的「梵語」不作脫離於其他語言的特殊語言看待，而是視作講話的高雅純正或完美方式。通過梵語文法家如波你尼的精密分析，梵語的知識在古印度是社會等級層次高和教育程度高的標誌，並主要教授給高等世襲階級的成員。梵語作為古印度的學術語言，與俗語同時共存，而俗語演化成了中古印度-雅利安語方言，並最終演化成了當代的各種印度-雅利安語言。\",\n    question: \"夜柔吠陀與阿闥婆吠陀均可以最為研究哪一門語言的參考？\",\n  }, {\n    text: \"16歲的托爾金和弟弟搬進宿舍時，初遇比他年長三歲的伊迪絲·瑪麗·布拉特。伊迪絲和羅納德經常去伯明罕的茶室，特別是有一個能讓人俯瞰人行道的陽台的那家。他們在那裡坐著，向行人的帽子上扔方糖塊，糖碗空了後就移到下一個桌子，對於有他們這樣性格和地位的兩人，愛情註定要開花。兩人都是缺乏愛的孤兒，但卻能給予對方溫暖。1909年夏天，他們陷入了愛河。他的監護人摩根神父，認為伊迪絲分散了托爾金對學業的注意力，因此禁止他見她，和她說話，甚至禁止和她寫信，直到他21歲。他早年違反了一次，導致摩根神父威脅如果再犯就中斷他的大學生涯，此後他嚴格地服從了這個禁令。在他21歲生日的夜晚，托爾金寫信給了伊迪絲。他表白了自己的愛情並且向她求婚。伊迪絲回信說她已經答應了另一個男人的求婚，不過那是因為她以為托爾金已經忘了她。兩人在一個鐵路橋下見面重續舊情。伊迪絲歸還了訂婚戒指，聲明她會與托爾金結婚。他們訂婚後，伊迪絲不情願地在托爾金的堅持下宣布自己皈依羅馬天主教。她的房東，一位堅定的新教徒，對此暴怒並驅逐她，令她一找到其他住處就離開。1913年1月，伊迪絲和羅納德在伯明罕正式訂婚，然後於1916年3月22日在聖貞女瑪麗羅馬天主教堂結婚。\",\n    question: \"伊迪絲·瑪麗·布拉特比托爾金年長幾歲?\",\n  }, {\n    text: \"到了各各他，士兵向耶穌提供了混合苦膽的酒，耶穌不肯喝。接著他與兩名被定罪的盜賊一起被釘在十字架上。耶穌被釘在中間的十字架上。根據馬可福音，耶穌在十字架上忍受了6個小時的煎熬，約由上午9時直到他下午3點左右去世。據聖經記錄，本丟彼拉多讓士兵加在他的頭上方以拉丁文、希臘文、希伯來文三種語言的標誌祂為「拿撒勒人耶穌，猶太人的王」。士兵瓜分他的長袍，為祂無縫的內衣拈。而在場眾多不相信耶穌的猶太律法師和文士都嘲諷他，聲稱耶穌若自己從十字架上下來，就相信他是從神來的，而一個強盜也是嘲諷他，但另一個強盜卻承認耶穌的基督身份，耶穌當時就回答他會與自己同日便能同在樂園。士兵拿海絨蘸滿了醋，綁在牛膝草上、送到耶穌口、耶穌嘗了後說過，成了，就死了。羅馬士兵打斷其他釘在十字架上兩名男子的腿好讓他們早點死，也有認為是當天猶太律法不讓罪犯被掛到日落，所以羅馬人折中防止逃跑以便次日對活著的繼續釘。因為耶穌已經死了，羅馬士兵並沒有打斷耶穌的腿。或是為了驗證耶穌是否已死，有一個士兵拿槍扎耶穌的肋旁、隨即有血和水流出來。\",\n    question: \"耶穌不肯喝士兵提供的什麼東西?\",\n    }],\n  api: async (stateReq: Req) => {\n    const req = {\n      context_raw: [stateReq.text],\n      question_raw: [stateReq.question],\n    };\n    return await axios.post('https://7017.lnsigo.mipt.ru/model', req);\n  },\n  renderAnswer: { type: 'textqa' },\n};\n\nconst TexqQA = skillWrapper<Req, Res>('textqazh');\nexport default function () {\n  return <TexqQA {...config}/>;\n}\n","import React, { Component } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport style from './App.module.scss';\n\nimport Nav from '../Nav';\nimport Footer from '../Footer';\n// mport header from './header.png';\n\nimport { TextQA as TextQAru, ODQA as ODQAru, NER as NERru, Sentiment } from '../skills/ru';\nimport { TextQA as TextQAen, ODQA, Ranking, NER, Chat, Intent, Insult } from '../skills/en';\nimport { TextQA as TextQAml, NER as NERml } from '../skills/mu';\nimport { TextQA as TextQAzh } from '../skills/zh';\n\n\nclass App extends Component {\n\n  render () {\n    return (\n      <HashRouter>\n        <header className={style.header}>\n          <p className={style.title}>\n            demo.<span className={style.blue}>DeepPavlov</span>.<span className={style.yellow}>ai</span>\n          </p>\n          {/*<img src={header} alt=\"DeepPavlov Demo\"/>*/}\n          <Nav/>\n        </header>\n        <main className={style.main}>\n          <Switch>\n            <Route path=\"/ru/textqa\" exact component={TextQAru}/>\n            <Route path=\"/ru/odqa\" exact component={ODQAru}/>\n            <Route path=\"/ru/ner\" exact component={NERru}/>\n            <Route path=\"/ru/sentiment\" exact component={Sentiment}/>\n            <Route path=\"/en/textqa\" exact component={TextQAen}/>\n            <Route path=\"/en/odqa\" exact component={ODQA}/>\n            <Route path=\"/en/ranking\" exact component={Ranking}/>\n            <Route path=\"/en/ner\" exact component={NER}/>\n            <Route path=\"/en/chat\" exact component={Chat}/>\n            <Route path=\"/en/intent\" exact component={Intent}/>\n            <Route path=\"/en/insult\" exact component={Insult}/>\n            <Route path=\"/mu/textqa\" exact component={TextQAml}/>\n            <Route path=\"/mu/ner\" exact component={NERml}/>\n            <Route path=\"/zh/textqa\" exact component={TextQAzh}/>\n          </Switch>\n        </main>\n        <Footer/>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport { reducer } from './lib/store';\nimport App from './components/App';\nimport './index.css';\n\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}